@using Newtonsoft.Json;
@using System.Text.Json.Serialization;
@model GameModel;
@{
    ViewData["Title"] = "Game";
}

<p>@Model.Difficulty</p>


<script>
    let xd = 0;
    let info=0;
    //var javacriptVariable = @Model.OriginalGrid;
    var jsonString = @JsonConvert.SerializeObject(Model.OriginalGrid);
    var jsonString2 = @JsonConvert.SerializeObject(Model.GameGrid);
    
    function dick(x,i,j){
        
        const element = document.getElementById(`c${i}r${j}`)
        
                if (jsonString[i][j] == x) {
                    element.style.color = "black"
                    jsonString2[i][j]=+x

                }
                else {
                element.style.color = "red";
                xd++;
                document.getElementById("demo3").innerHTML = `Liczba błędów ${xd}`;
                //console.log(xd)
            }

            if(xd>=3){
            clearInterval(a)
            document.getElementById("demo").innerHTML = "koniec gry";
            const inputs=document.querySelectorAll(".input");
            inputs.forEach((input,index)=>{
                input.setAttribute("disabled","");
            })
            
            }
            
            else {
            const inputs = document.querySelectorAll(".input");
            inputs.forEach((input, index) => {
                input.removeAttribute("disabled");
            })
            }
            for (var i = 0; i < 9; i++){

    
        
            for (var j = 0; j < 9; j++){
                console.log(info);
            if(jsonString[i][j]==jsonString2[i][j]){

                info++;
                if(info>=81){
                        clearInterval(a)
                        document.getElementById("demo2").innerHTML = `wygrałes twoj czas to : ${pad(parseInt(totalSeconds / 60))}:${pad(totalSeconds % 60)}`;
                        
                        const inputs = document.querySelectorAll(".input");
                        inputs.forEach((input, index) => {
                            input.setAttribute("disabled", "");
                        })
                }

            }
                else{
                    info=0;
                }

            }
           
            }
            
        //console.log(element)
       // console.log(jsonString2)
        

    }

    const dick3 = () => {
        xd = 0;
        document.getElementById("demo").innerHTML = "";
        document.getElementById("demo2").innerHTML = "";

        clearInterval(a)
        a = setInterval(setTime, 1000);

        const inputs = document.querySelectorAll(".input");
        inputs.forEach((input, index) => {
            input.removeAttribute("disabled");
        })

        totalSeconds = 0;
        info=0;
        jsonString2 = @JsonConvert.SerializeObject(Model.GameGrid);
    }


    </script>
    <style>
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
        }

        input[type=number]{
            -moz-appearance: textfield;
        }
    </style>
<div id>

    @for (var i = 0; i < Model.OriginalGrid.GetLength(0); i++)
    {
        <div>
        @for (var j = 0; j < Model.OriginalGrid.GetLength(1); j++){

           <span>
               @Model.OriginalGrid[i,j]
           </span>
          
        }
        </div>
    }

</div>
<form>
<div>
    
    @for (var i = 0; i < Model.GameGrid.GetLength(0); i++)
    {
        
        <center><div style="font-size:50px;position:center;display: grid; grid-template-columns: repeat(9, 80px);
">

            @for (var j = 0; j < Model.GameGrid.GetLength(1); j++)
            {
                        
                <div style="border: 1px solid black; height: 80px">@if(Model.GameGrid[i,j]==0){
                                <input class="input" id="@("c"+ i.ToString() + "r" + j.ToString())" style="width: 50px; height: 80px; outline: none; border: none; border-bottom: 2px solid black ; box-shadow: none;text-align: center;" type="number" min="1" max="9" onchange="dick(this.value,@i,@j)">

                    }
                        else{
                           
                           
                            @Model.GameGrid[i,j]
                           
                                
                }
                </div>
                    
            }
                    
            </div>
        </center>
            <div style="float:right">
                <p id="demo"></p>
                <p id="demo2"></p>
                <p id="demo3"></p>
            </div>
    }
        <input type="reset" value="Clear board" onclick="dick3()">
        <a href="https://localhost:9000/Game/DifficultySelect">Change Difficult level</a><br />
        <a href="https://localhost:9000/">Quit</a>
        <div>
            <label id="minutes">00</label>
            <label id="colon">:</label>
            <label id="seconds">00</label>
            <script type="text/javascript">
                var minutesLabel = document.getElementById("minutes");
                var secondsLabel = document.getElementById("seconds");
                var totalSeconds = 0;
                let a=setInterval(setTime, 1000);

                function setTime() {
                    ++totalSeconds;
                    secondsLabel.innerHTML = pad(totalSeconds % 60);
                    minutesLabel.innerHTML = pad(parseInt(totalSeconds / 60));
                }

                function pad(val) {
                    var valString = val + "";
                    if (valString.length < 2) {
                        return "0" + valString;
                    }
                    else {
                        return valString;
                    }
                }
            </script>
        </div>
</div>
</form>